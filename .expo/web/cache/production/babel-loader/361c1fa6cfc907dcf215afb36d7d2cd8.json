{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{Component,useState}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import Button from\"react-native-web/dist/exports/Button\";import FlatList from\"react-native-web/dist/exports/FlatList\";import GoalItem from\"./components/Goalitem\";import GoalInput from\"./components/GoalInput\";import Counter from\"./components/Counter\";export default function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),courseGoals=_useState2[0],setCourseGoals=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isAddMode=_useState4[0],setIsAddMode=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isAddModeCount=_useState6[0],setIsAddModeCount=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),count=_useState8[0],setCount=_useState8[1];var addGoalHandler=function addGoalHandler(goalTitle){setCourseGoals(function(currentGoals){return[].concat(_toConsumableArray(currentGoals),[{id:Math.random().toString(),value:goalTitle}]);});setIsAddMode(false);};var removeGoalHandler=function removeGoalHandler(goalId){setCourseGoals(function(currentGoals){return currentGoals.filter(function(goal){return goal.id!==goalId;});});};var closeModal=function closeModal(returnedCount){setCount(returnedCount);setIsAddModeCount(false);};var closeAddModal=function closeAddModal(){setIsAddMode(false);};return React.createElement(View,{style:styles.screen},React.createElement(View,{style:styles.button},React.createElement(Button,{title:\"Add New Goal\",onPress:function onPress(){return setIsAddMode(true);}})),React.createElement(View,{style:styles.button},React.createElement(Button,{title:\"Add count\",onPress:function onPress(){return setIsAddModeCount(true);}}),React.createElement(Text,null,count)),React.createElement(Counter,{visible:isAddModeCount,onClose:closeModal}),React.createElement(GoalInput,{visible:isAddMode,onAddGoal:addGoalHandler,closeAddModal:closeAddModal}),React.createElement(FlatList,{keyExtractor:function keyExtractor(item,index){return item.id;},data:courseGoals,renderItem:function renderItem(itemData){return React.createElement(GoalItem,{id:itemData.item.id,onDelete:removeGoalHandler,title:itemData.item.value});}}));}var styles=StyleSheet.create({screen:{padding:50},button:{marginBottom:10}});","map":{"version":3,"sources":["D:/tutorials/React_Native/Project1/App.js"],"names":["React","Component","useState","GoalItem","GoalInput","Counter","App","courseGoals","setCourseGoals","isAddMode","setIsAddMode","isAddModeCount","setIsAddModeCount","count","setCount","addGoalHandler","goalTitle","currentGoals","id","Math","random","toString","value","removeGoalHandler","goalId","filter","goal","closeModal","returnedCount","closeAddModal","styles","screen","button","item","index","itemData","StyleSheet","create","padding","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { StyleSheet, Text, View, Button, FlatList } from 'react-native';\nimport GoalItem from './components/Goalitem';\nimport GoalInput from './components/GoalInput';\nimport Counter from './components/Counter';\n\nexport default function App() {\n\n    const [courseGoals, setCourseGoals] = useState([]);\n    const [isAddMode, setIsAddMode] = useState(false);\n    const [isAddModeCount, setIsAddModeCount] = useState(false);\n    const [count, setCount] = useState(0);\n    \n    const addGoalHandler = goalTitle => {\n        setCourseGoals(currentGoals => [...currentGoals, { id: Math.random().toString(), value: goalTitle }]);\n        setIsAddMode(false);\n    }\n\n    const removeGoalHandler = goalId => {\n        setCourseGoals(currentGoals => {\n            return currentGoals.filter((goal) => goal.id !== goalId);\n        });\n    };\n\n    const closeModal = (returnedCount) => {\n        setCount(returnedCount);\n        setIsAddModeCount(false);\n\n    };\n    const closeAddModal = () => {\n        setIsAddMode(false);\n    };\n\n    return (\n        <View style={styles.screen}>\n\n            <View style={styles.button}>\n                <Button title=\"Add New Goal\" onPress={() => setIsAddMode(true)} />\n            </View>\n        \n            <View style={styles.button}>\n                <Button title=\"Add count\" onPress={() => setIsAddModeCount(true)} />\n                <Text>{count}</Text>\n            </View>\n        \n            <Counter visible={isAddModeCount} onClose={closeModal} />\n        \n            <GoalInput visible={isAddMode} onAddGoal={addGoalHandler} closeAddModal={closeAddModal} />\n        \n            <FlatList\n                keyExtractor={(item, index) => item.id}\n                data={courseGoals}\n                renderItem={\n                    itemData => <GoalItem\n                        id={itemData.item.id}\n                        onDelete={removeGoalHandler}\n                        title={itemData.item.value} />\n                }\n            />\n        </View>\n    );\n\n}\nconst styles = StyleSheet.create({\n    screen: {\n        padding: 50\n    },\n    button: {\n        marginBottom: 10\n    }\n\n});\n"]},"metadata":{},"sourceType":"module"}